proftpd (1.3.1-12) unstable; urgency=low

    Starting from this version, exotic authentication modules have been
    splitted into different binary packages to reduce the number of 
    dependencies. For compatibility they are all installed in upgrading,
    but you can remove both all unused proftpd-mod-* modules and the
    pseudo-package proftpd, now used only for migration.

 -- Francesco Paolo Lovergine <frankie@debian.org>  Thu, 19 Jun 2008 15:24:22 +0200

proftpd (1.3.1-10) unstable; urgency=low

     A new tiny `proftpd-gencert` script is now provided to create SSL/TLS 
     self-signed certificate. The resulting key and certificate can be
     used along with the tls.conf template to provide ftps connections.

 -- Francesco Paolo Lovergine <frankie@debian.org>  Mon, 19 May 2008 18:03:49 +0200

proftpd (1.3.1-4) unstable; urgency=low

     Starting from this version a few example set of directives used 
     for exotic authentications are splitted out in a few separate 
     .conf files (currently LDAP, SQL and TLS related) which need
     to be included by the main proftpd.conf file. 
     Their use is optional but strongly suggested. All directives
     are commented out by default.

 -- Francesco Paolo Lovergine <frankie@debian.org>  Thu, 03 Jan 2008 17:35:56 +0100

proftpd (1.3.0-1) unstable; urgency=low

     Starting from 1.3.0 proftpd support  DSO and debian packaging moved
     to  a single  package  style, in  respect  with the  multi-binaries
     package  previously used.  The  list of  modules  (all modules  are
     enabled per default) is  visibile in /etc/proftpd/modules.conf. You
     could  also need  to  comment  out the  unused  SQL backend  module
     loading (mod_sql_mysql  or mod_sql_postgres) in that  file in order
     to  have  the right  SQL  engine  working. Another  possibility  is
     specifying a suitable AuthOrder in your configuration file.

     mod_sql_mysql should handle old MySQL password format more
     gracefully.  Starting with MySQL 4.1.1, the format for passwords stored
     using the MySQL PASSWORD() function changed.  This format change causes
     issues for sites that have passwords stored in the older format.  Users
     of mod_sql+mod_sql_mysql would see this as users being unable to login.
     Now, if compiled against MySQL 4.1.1 or later, mod_sql_mysql will first
     check the password using the current MySQL format; if that fails it
     will fall back to checking the old format.  Note that this only affects
     sites which have "SQLAuthTypes Backend" in their proftpd.conf.

     
 -- Francesco Paolo Lovergine <frankie@debian.org>  Mon, 6 Jun 2005 14:39:04 +0200

