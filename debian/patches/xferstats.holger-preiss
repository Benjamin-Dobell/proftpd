Description: Fixing output diplay ot xferstats
Author: Francesco Paolo Lovergine <frankie@debian.org>
Forwarded: not needed

Index: proftpd-dfsg/contrib/xferstats.holger-preiss
===================================================================
--- proftpd-dfsg.orig/contrib/xferstats.holger-preiss	2014-01-30 13:42:22.000000000 +0100
+++ proftpd-dfsg/contrib/xferstats.holger-preiss	2014-01-30 13:45:32.000000000 +0100
@@ -45,6 +45,8 @@
 #  -added option A which compares the addresses end with a given pattern
 #  -added option i and o which reports either incoming or outgoing traffic only
 
+use Getopt::Std;
+
 @mydom = split(/\./, `dnsdomainname`);
 $mydom2 = pop(@mydom); chop($mydom2);
 $mydom1 = pop(@mydom);
@@ -66,8 +68,7 @@
 $opt_t = 1;
 $opt_l = 3;
 
-require 'getopts.pl';
-&Getopts('f:rahdD:l:s:A:iotu:e');
+getopts('f:rahdD:l:s:A:iotu:e');
 
 if ($opt_r) { $real = 1;}
 if ($opt_a) { $anon = 1;}
@@ -209,8 +210,8 @@
 }
 close LOG;
 
-@syslist = keys(systemfiles);
-@dates = sort datecompare keys(xferbytes);
+@syslist = keys(%systemfiles);
+@dates = sort datecompare keys(%xferbytes);
 
 if ($xferfiles == 0) {die "There was no data to process.\n";}
 
@@ -244,7 +245,7 @@
 
 # sort daily traffic by bytes sendt
 #foreach $date ( sort datecompare keys(nbytes) ) {
-foreach $date ( sort datecompare keys(xferbytes) ) {
+foreach $date ( sort datecompare keys(%xferbytes) ) {
 
    $nfiles = $xferfiles{$date};
    $nbytes = $xferbytes{$date};
@@ -263,14 +264,14 @@
 
 Total Transfers from each Archive Section (By bytes)
 
-                                                 ---- Percent  Of ----
-     Archive Section      Files Sent Bytes Sent  Files Sent Bytes Sent
-------------------------- ---------- ----------- ---------- ----------
+                                                   ---- Percent  Of ----
+     Archive Section      Files Sent Bytes Sent    Files Sent Bytes Sent
+------------------------- ---------- ------------- ---------- ----------
 .
 
 format line2 =
-@<<<<<<<<<<<<<<<<<<<<<<<< @>>>>>>>>> @>>>>>>>>>> @>>>>>>>   @>>>>>>>
-$section,                 $files,    $bytes,     $pctfiles, $pctbytes
+@<<<<<<<<<<<<<<<<<<<<<<<< @>>>>>>>>> @>>>>>>>>>>>> @>>>>>>>   @>>>>>>>
+$section,                 $files,    $bytes,       $pctfiles, $pctbytes
 .
 
 $| = 1;
@@ -279,7 +280,7 @@
 $~ = line2;
 
 # sort total transfer for each archive by # files transfered
-foreach $section ( sort bytecompare keys(groupfiles) ) {
+foreach $section ( sort bytecompare keys(%groupfiles) ) {
 
    $files = $groupfiles{$section};
    $bytes = $groupbytes{$section};
@@ -311,7 +312,7 @@
 $~ = line3;
 
 # sort amount per domain by files
-foreach $domain ( sort domnamcompare keys(domainfiles) ) {
+foreach $domain ( sort domnamcompare keys(%domainfiles) ) {
 
    $files = $domainfiles{$domain};
    $bytes = $domainbytes{$domain};
@@ -353,7 +354,7 @@
 $~ = line8;
 
 # sort hourly transmission by sent bytes
-foreach $time ( sort keys(xfertbytes) ) {
+foreach $time ( sort keys(%xfertbytes) ) {
 
    $nfiles   = $xfertfiles{$time};
    $nbytes   = $xfertbytes{$time};
