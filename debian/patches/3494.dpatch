#! /bin/sh /usr/share/dpatch/dpatch-run
## 3494.dpatch by Francesco Paolo Lovergine <frankie@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' proftpd-dfsg~/src/netaddr.c proftpd-dfsg/src/netaddr.c
--- proftpd-dfsg~/src/netaddr.c	2010-09-13 15:38:16.000000000 +0200
+++ proftpd-dfsg/src/netaddr.c	2010-09-14 11:02:40.000000000 +0200
@@ -1456,7 +1456,7 @@
 }
 
 int pr_netaddr_is_loopback(const pr_netaddr_t *na) {
-  if (!na) {
+  if (na == NULL) {
     errno = EINVAL;
     return -1;
   }
@@ -1468,6 +1468,25 @@
 
 #ifdef PR_USE_IPV6
     case AF_INET6:
+      if (pr_netaddr_is_v4mappedv6(na) == TRUE) {
+        pool *tmp_pool;
+        pr_netaddr_t *v4na;
+        int res;
+
+        tmp_pool = make_sub_pool(permanent_pool);
+
+        v4na = pr_netaddr_alloc(tmp_pool);
+        pr_netaddr_set_family(v4na, AF_INET);
+        pr_netaddr_set_port(v4na, pr_netaddr_get_port(na));
+        memcpy(&v4na->na_addr.v4.sin_addr, get_v4inaddr(na),
+          sizeof(struct in_addr));
+
+        res = pr_netaddr_is_loopback(v4na);
+        destroy_pool(tmp_pool);
+
+        return res;
+      }
+
       /* XXX *sigh* Different platforms implement the IN6_IS_ADDR macros
        * differently.  For example, on Linux, those macros expect to operate
        * on s6_addr32, while on Solaris, the macros operate on struct in6_addr.
