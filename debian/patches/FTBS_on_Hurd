Author: Svante Signell <svante.signell@gmail.com>
Last-Update: 2014-07-09
Forwarded: http://bugs.proftpd.org/show_bug.cgi?id=4050
Bug-Debian: http://bugs.debian.org/745493

Index: git/contrib/mod_exec.c
===================================================================
--- git.orig/contrib/mod_exec.c	2016-12-10 20:53:38.884273950 +0100
+++ git/contrib/mod_exec.c	2016-12-10 20:53:38.876273944 +0100
@@ -742,14 +742,20 @@
 
         if (fds >= 0) {
           int buflen;
-          char buf[PIPE_BUF];
+
+          size_t len = fpathconf(exec_stdout_pipe[0], _PC_PIPE_BUF);
+          char *buf = malloc(len);
+          if (buf == NULL) {
+            exec_log("malloc failed: %s", strerror(errno));
+            return errno;
+          }
 
           /* The child sent us something.  How thoughtful. */
 
           if (FD_ISSET(exec_stdout_pipe[0], &readfds)) {
-            memset(buf, '\0', sizeof(buf));
+            memset(buf, '\0', len);
 
-            buflen = read(exec_stdout_pipe[0], buf, sizeof(buf)-1);
+            buflen = read(exec_stdout_pipe[0], buf, len - 1);
             if (buflen > 0) {
               if (exec_opts & EXEC_OPT_SEND_STDOUT) {
 
@@ -796,9 +802,9 @@
           }
 
           if (FD_ISSET(exec_stderr_pipe[0], &readfds)) {
-            memset(buf, '\0', sizeof(buf));
+            memset(buf, '\0', len);
 
-            buflen = read(exec_stderr_pipe[0], buf, sizeof(buf)-1);
+            buflen = read(exec_stdout_pipe[0], buf, len - 1);
             if (buflen > 0) {
 
               /* Trim trailing CRs and LFs. */
@@ -828,6 +834,7 @@
               }
             }
           }
+          free(buf);
         }
 
         res = waitpid(pid, &status, WNOHANG);
Index: git/contrib/mod_sftp/keys.c
===================================================================
--- git.orig/contrib/mod_sftp/keys.c	2016-12-10 20:53:38.884273950 +0100
+++ git/contrib/mod_sftp/keys.c	2016-12-10 20:53:38.876273944 +0100
@@ -412,10 +412,15 @@
 
         if (FD_ISSET(stderr_pipe[0], &readfds)) {
           int stderrlen;
-          char stderrbuf[PIPE_BUF];
 
-          memset(stderrbuf, '\0', sizeof(stderrbuf));
-          stderrlen = read(stderr_pipe[0], stderrbuf, sizeof(stderrbuf)-1);
+          size_t len = fpathconf(stderr_pipe[0], _PC_PIPE_BUF);
+          char *stderrbuf = malloc(len);
+          if (stderrbuf == NULL) {
+            pr_log_pri(PR_LOG_ALERT, MOD_SFTP_VERSION ": Out of memory!");
+            return -1;
+	  }
+          memset(stderrbuf, '\0', len);
+          stderrlen = read(stderr_pipe[0], stderrbuf, len - 1);
           if (stderrlen > 0) {
             while (stderrlen &&
                    (stderrbuf[stderrlen-1] == '\r' ||
@@ -432,6 +437,7 @@
               ": error reading stderr from '%s': %s",
               passphrase_provider, strerror(errno));
           }
+          free(stderrbuf);
         }
       }
 
Index: git/contrib/mod_tls.c
===================================================================
--- git.orig/contrib/mod_tls.c	2016-12-10 20:53:38.884273950 +0100
+++ git/contrib/mod_tls.c	2016-12-10 20:53:38.880273947 +0100
@@ -1800,10 +1800,15 @@
 
         if (FD_ISSET(stderr_pipe[0], &readfds)) {
           int stderrlen;
-          char stderrbuf[PIPE_BUF];
 
-          memset(stderrbuf, '\0', sizeof(stderrbuf));
-          stderrlen = read(stderr_pipe[0], stderrbuf, sizeof(stderrbuf)-1);
+          size_t len = fpathconf(stderr_pipe[0], _PC_PIPE_BUF);
+          char *stderrbuf = malloc(len);
+          if (stderrbuf == NULL) {
+            tls_log("malloc failed: %s", strerror(errno));
+            return -1;
+          }
+          memset(stderrbuf, '\0', len);
+          stderrlen = read(stderr_pipe[0], stderrbuf, len - 1);
           if (stderrlen > 0) {
             while (stderrlen &&
                    (stderrbuf[stderrlen-1] == '\r' ||
@@ -1820,6 +1825,7 @@
               ": error reading stderr from '%s': %s",
               tls_passphrase_provider, strerror(errno));
           }
+          free(stderrbuf);
         }
       }
 
